Comment: Invoice Processing
StartAt: Get Configuration
States:
  Get Configuration:
    Type: Task
    Next: Invoices
    Parameters:
      Names:
        - /invoices/config/bucketName
        - /invoices/config/jsonKey
    Resource: arn:aws:states:::aws-sdk:ssm:getParameters
    ResultSelector:
      bucketName.$: $.Parameters[0].Value
      bucketKey.$: $.Parameters[1].Value
    Comment: Get configuration stored in Parameters Store
  Invoices:
    Type: Map
    ItemProcessor:
      ProcessorConfig:
        Mode: DISTRIBUTED
        ExecutionType: STANDARD
      StartAt: Validate Document
      States:
        Validate Document:
          Type: Choice
          Choices:
            - And:
                - Variable: $.documentType
                  IsPresent: true
                - Variable: $.documentType
                  StringEquals: INVOICE
              Next: Generate Invoice ID
          Default: Failed
          Comment: Check if document type is invoice
        Generate Invoice ID:
          Type: Pass
          Next: Update Invoice DB
          ResultPath: $.generate
          Parameters:
            invoiceId.$: States.Hash($.fileName, 'MD5')
            updatedAt.$: $$.Execution.StartTime
            status: NEW
          Comment: Add invoice ID and status
        Update Invoice DB:
          Type: Task
          Resource: arn:aws:states:::dynamodb:updateItem
          Parameters:
            TableName: Invoices
            Key:
              invoiceId:
                S.$: $.generate.invoiceId
            UpdateExpression: >-
              SET fileName = :fileName, invoiceStatus = :invoiceStatus, updatedAt = :updatedAt
            ExpressionAttributeValues:
              ':updatedAt':
                S.$: $.generate.updatedAt
              ':fileName':
                S.$: $.fileName
              ':invoiceStatus':
                S.$: $.generate.status
          Next: New Invoice Event
          ResultPath: $.result.dynamoDb
          Retry:
            - ErrorEquals:
                - States.ALL
              BackoffRate: 2
              IntervalSeconds: 1
              MaxAttempts: 2
          Catch:
            - ErrorEquals:
                - States.ALL
              Next: Failed
          TimeoutSeconds: 10
          HeartbeatSeconds: 3
          Comment: Add or update record in DynamoDB table
        New Invoice Event:
          Type: Pass
          End: true
          Parameters:
            Detail:
              documentType.$: $.documentType
              fileName.$: $.fileName
              invoiceId.$: $.generate.invoiceId
              status.$: $.generate.status
              updatedAt.$: $.generate.updatedAt
              invoiceData.$: $.data
            DetailType: NewInvoiceImported
            EventBusName: Invoices
            Source: ImportInvoices
          Comment: Create formatted event with invoice data
        Failed:
          Type: Fail
          Comment: Fail state
    ItemReader:
      Resource: arn:aws:states:::s3:getObject
      ReaderConfig:
        InputType: JSON
      Parameters:
        Bucket.$: $.bucketName
        Key.$: $.bucketKey
    Next: Send Events
    Label: Invoices
    Comment: Create an array from JSON file stored in S3 Bucket
  Send Events:
    Type: Task
    Resource: arn:aws:states:::events:putEvents
    Parameters:
      Entries.$: $
    Retry:
      - ErrorEquals:
          - States.ALL
        BackoffRate: 2
        IntervalSeconds: 1
        MaxAttempts: 2
    TimeoutSeconds: 10
    HeartbeatSeconds: 3
    End: true
    Comment: Send array of events to event bus in 2nd region
TimeoutSeconds: 300